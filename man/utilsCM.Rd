% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/UtilsCM.R
\name{utilsCM}
\alias{cmYAcrossX}
\alias{mergeRowsByColumnValue}
\alias{mostAbundantRows}
\alias{rmMinAbundance}
\alias{sumColumns}
\alias{summaryCM}
\alias{summaryCM.Vector}
\alias{transpose.df}
\alias{utilsCM}
\title{Utils to preprocess community matrix}
\usage{
rmMinAbundance(community.matrix, minAbund = 2, MARGIN = 1, verbose = TRUE)

transpose.df(community.matrix)

summaryCM.Vector(community.matrix, digits = 2)

summaryCM(community.matrix, most.abund, has.total = 1, digits = 2)

mostAbundantRows(community.matrix, most.abund = 150)

cmYAcrossX(community.matrix, terms = c("OTUs", "samples", "reads"))

sumColumns(community.matrix, sep = "-", nth = 1)

mergeRowsByColumnValue(community.matrix, ..., FUN = sum)
}
\arguments{
\item{community.matrix}{Community matrix (OTU table), where rows are 
OTUs or individual species and columns are sites or samples. See \code{\link{ComMA}}.}

\item{minAbund}{The minimum abundance threshold to remove rows/columns 
by row/column sum of abundance. For exampe, if minAbund=2, then remove 
all singletons appeared in only one sample. If minAbund=1, 
then remove all empty rows/columns. Default to 2 (singletons).}

\item{MARGIN}{1 indicates rows, 2 indicates columns. Default to 1.}

\item{verbose}{More details. Default to TRUE.}

\item{digits}{The digits to \code{\link{round}} decimal places 
if number is not interger. Default to 2.}

\item{most.abund}{The threshold to define the number of the most abundent OTUs.}

\item{has.total}{If 0, then only return abudence by samples (columns) of community matrix. 
If 1, then only return toal abudence. If 2, then return abudence by samples (columns) and total. 
Default to 1.}

\item{terms}{The terms to be used in names of the data frame, 
which will be shown in the graph if using \code{\link{ggBarYAcrossX}}. 
Default to c("OTUs", "samples", "reads"). 
Please be careful of the order if any change.}

\item{sep}{The seperator to get the \emph{n}th substring from column names. Default to dash '-'.}

\item{nth}{The \emph{n}th substring. Default to 1 (first).}

\item{...}{The community matrix column names for \code{mergeRowsByColumnValue}.}

\item{FUN}{The function to compute the summary statistics 
which can be applied to all data subsets. Refer to \code{\link{aggregate}}.}

\item{most.abund}{The threshold to define the number 
of the most abundent OTUs. Default to 150.}
}
\description{
Utils to preprocess community matrix, 
such as removing OTUs by different filters, 
and aggregating matrix by different ways.
}
\details{
\code{rmMinAbundance} returns the subset matrix of given community matrix, 
by removing rows or colums whose sum of abundance is less than the minimum abundance threshold.

\code{transpose.df} returns a transposed data frame, 
such as transposed community matrix for \pkg{vegan} package.

\code{summaryCM.Vector} return a vector of summary of the 
community matrix, where \code{community.matrix} can be one column only.
The vector is c("reads","OTUs","Shannon","samples","singletons","doubletons").

\code{summaryCM} summarizes the community matrix.

\code{mostAbundantRows} trims data frame 
to the rows having most abundance given a threshold. 
The trimmed data frame having most abundant rows, 
such as community matrix of 150 most abundant OTUs.

\code{cmYAcrossX} aggregates a community matrix to a data frame 
to show the number of OTUs (y-axis) across the number of samples (x-axis). 
The 'samples' is the number of samlpes in sequence,
the 'OTUs' is the number of OTUs appeared only in that number of samlpes, 
and the 'reads' is the number of reads assigned to those OTUs.

\code{sumColumns} sums the columns by the \emph{n}th substring defined in column names.

\code{mergeRowsByColumnValue} \code{\link{aggregate}}s 
given community matrix by applying a specified function (e.g. sum) 
to the values of given columns.
}
\examples{
# remove singletons 
ComMA::rmMinAbundance(community.matrix, minAbund=2)

t.community.matrix <- transpose.df(community.matrix)

summary.cm.vector <- summaryCM.Vector(community.matrix)

summary.cm <- summaryCM(community.matrix)

community.matrix <- getCommunityMatrix("16S", isPlot=TRUE, minAbund=1)
OTU100 <- mostAbundantRows(community.matrix, mostAbundant=100)

community.matrix <- getCommunityMatrix("16S", isPlot=TRUE, minAbund=1)
cm.aggre <- cmYAcrossX(community.matrix)
print(cm.aggre, row.names = FALSE)

# by subpl
community.matrix <- getCommunityMatrix("16S", isPlot=FALSE, minAbund=1)
colSums(community.matrix)
communityMatrix1 <- sumColumns(community.matrix)
colSums(communityMatrix1)


}
\keyword{community}
\keyword{matrix}

