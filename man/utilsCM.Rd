% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CMUtils.R
\name{utilsCM}
\alias{mostAbundantRows}
\alias{preprocessCM}
\alias{preprocessEnv}
\alias{rmMinAbundance}
\alias{spilt.df}
\alias{sumColumns}
\alias{transposeDF}
\alias{utilsCM}
\title{Utils to preprocess community matrix}
\usage{
rmMinAbundance(community.matrix, minAbund = 2, MARGIN = 1, verbose = TRUE)

transposeDF(community.matrix, to.numeric = TRUE)

preprocessCM(cm, rm.samples = c(), min.abund = 5, mean.abund.thr = 0.025)

preprocessEnv(env, rm.samples = c(), sel.env.var = c(), log.var = c(),
  log.base = 2)

spilt.df(community.matrix, spilt.to = 2, MARGIN = 1, verbose = TRUE)

mostAbundantRows(community.matrix, most.abund = 150, row.decreasing = TRUE,
  col.decreasing = TRUE)

sumColumns(community.matrix, sep = "-", nth = 1)
}
\arguments{
\item{community.matrix}{Community matrix (OTU table), where rows are 
OTUs or individual species and columns are sites or samples. See \code{\link{ComMA}}.}

\item{minAbund}{The minimum abundance threshold to remove rows/columns 
by row/column sum of abundance. For exampe, if minAbund=2, then remove 
all singletons appeared in only one sample. If minAbund=1, 
then remove all empty rows/columns. Default to 2 (singletons).}

\item{MARGIN}{1 indicates rows, 2 indicates columns. Default to 1.}

\item{verbose}{More details. Default to TRUE.}

\item{cm}{A community matrix not transposed,
Columns are samples.}

\item{rm.samples}{Remove specified samples in a vector, 
it can be a keyword shared in sample names.
The vector will convert to a string separated by '|' to multi-samples. 
Default to empty vector to do nothing.}

\item{min.abund, mean.abund.thr}{Exclude any samples with excessively 
low abundance. Defaul \code{min.abund=5, mean.abund.thr=0.025}.
The final threshold takes the maximun value of 
\code{max(min.abund, mean(colSums(cm))*mean.abund.thr)}.}

\item{env}{The enviornmental meta-data, where rows are samples 
and columns are enviornmental variables.}

\item{sel.env.var}{The vector of selected environmental variables, 
which can be colnames(env) or their indices. 
Defaul to an empty vector to choose all variables.}

\item{log.var, log.base}{It normally needs log transform to soil chemistry variables.
Use \code{\link{plotCorrelations}} to visualize variables and determine 
whether log transform should be applied. Default to no log transform.}

\item{spilt.to}{The number of sub-data-frame to spilt. It must >= 2.
Default to 2.}

\item{most.abund}{The threshold to define the number 
of the most abundent OTUs. Default to 150.}

\item{row.decreasing, col.decreasing}{Should the sort 
decreasing order of \code{colnames} or \code{colSums}
be TRUE? Refer to \code{\link{order}}. If NULL, do nothing.
Default to TRUE.}

\item{sep}{The seperator to get the \emph{n}th substring from column names. Default to dash '-'.}

\item{nth}{The \emph{n}th substring. Default to 1 (first).}
}
\description{
Utils to preprocess community matrix, 
such as removing OTUs by different filters, 
and aggregating matrix by different ways.
}
\details{
\code{rmMinAbundance} returns the subset matrix of given community matrix, 
by removing rows or colums whose sum of abundance is less than the minimum abundance threshold.

\code{transposeDF} returns a transposed data frame, 
such as transposed community matrix for \pkg{vegan} package.

\code{preprocessCM} exclude any samples with 
excessively low abundance.

\code{preprocessEnv} subsets the enviornmental variables 
and make log transform to soil chemistry variables.

\code{spilt.df} spilt a data frame into chunks of data frames 
having equal rows/columns.

\code{mostAbundantRows} takes the given number of 
most abundant rows (OTUs) from original community matrix 
to form a new matrix. The new matrix will sort by both 
\code{rowSums} and \code{colSums} in decreasing by default.

\code{sumColumns} sums the columns by the \emph{n}th substring defined in column names.
}
\examples{
# remove singletons 
ComMA::rmMinAbundance(community.matrix, minAbund=2)

t.community.matrix <- transposeDF(community.matrix)

cm <- preprocessCM(cm, rm.samples=c("CM30b51","CM30b58"))

env <- preprocessEnv(env, sel.env.var=c(4,5,8,9,14:22), log.var=c(5:8,9:11))

cm.list <- spiltCM(community.matrix)

community.matrix <- getCommunityMatrix("16S", isPlot=TRUE, minAbund=1)
OTU100 <- mostAbundantRows(community.matrix, most.abund=100)

# by subpl
community.matrix <- getCommunityMatrix("16S", isPlot=FALSE, minAbund=1)
colSums(community.matrix)
communityMatrix1 <- sumColumns(community.matrix)
colSums(communityMatrix1)

}
\keyword{community}
\keyword{matrix}

