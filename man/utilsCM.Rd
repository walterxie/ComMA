% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CMUtils.R
\name{utilsCM}
\alias{cmYAcrossX}
\alias{mostAbundantRows}
\alias{rmMinAbundance}
\alias{spilt.df}
\alias{sumColumns}
\alias{transposeDF}
\alias{utilsCM}
\title{Utils to preprocess community matrix}
\usage{
rmMinAbundance(community.matrix, minAbund = 2, MARGIN = 1, verbose = TRUE)

transposeDF(community.matrix, to.numeric = TRUE)

spilt.df(community.matrix, spilt.to = 2, MARGIN = 1, verbose = TRUE)

mostAbundantRows(community.matrix, most.abund = 150, row.decreasing = TRUE,
  col.decreasing = TRUE)

cmYAcrossX(community.matrix, terms = c("OTUs", "samples", "reads"))

sumColumns(community.matrix, sep = "-", nth = 1)
}
\arguments{
\item{community.matrix}{Community matrix (OTU table), where rows are 
OTUs or individual species and columns are sites or samples. See \code{\link{ComMA}}.}

\item{minAbund}{The minimum abundance threshold to remove rows/columns 
by row/column sum of abundance. For exampe, if minAbund=2, then remove 
all singletons appeared in only one sample. If minAbund=1, 
then remove all empty rows/columns. Default to 2 (singletons).}

\item{MARGIN}{1 indicates rows, 2 indicates columns. Default to 1.}

\item{verbose}{More details. Default to TRUE.}

\item{spilt.to}{The number of sub-data-frame to spilt. It must >= 2.
Default to 2.}

\item{most.abund}{The threshold to define the number 
of the most abundent OTUs. Default to 150.}

\item{row.decreasing, col.decreasing}{Should the sort 
decreasing order of \code{colnames} or \code{colSums}
be TRUE? Refer to \code{\link{order}}. If NULL, do nothing.
Default to TRUE.}

\item{terms}{The terms to be used in names of the data frame, 
which will be shown in the graph if using \code{\link{ggBarYAcrossX}}. 
Default to c("OTUs", "samples", "reads"). 
Please be careful of the order if any change.}

\item{sep}{The seperator to get the \emph{n}th substring from column names. Default to dash '-'.}

\item{nth}{The \emph{n}th substring. Default to 1 (first).}
}
\description{
Utils to preprocess community matrix, 
such as removing OTUs by different filters, 
and aggregating matrix by different ways.
}
\details{
\code{rmMinAbundance} returns the subset matrix of given community matrix, 
by removing rows or colums whose sum of abundance is less than the minimum abundance threshold.

\code{transposeDF} returns a transposed data frame, 
such as transposed community matrix for \pkg{vegan} package.

\code{spilt.df} spilt a data frame into chunks of data frames 
having equal rows/columns.

\code{mostAbundantRows} takes the given number of 
most abundant rows (OTUs) from original community matrix 
to form a new matrix. The new matrix will sort by both 
\code{rowSums} and \code{colSums} in decreasing by default.

\code{cmYAcrossX} aggregates a community matrix to another abundance matrix 
to show the number of OTUs (y-axis) simultaneously appeared at the number of samples (x-axis). 
The 'samples' is the number of samlpes listed in sequence,
the 'OTUs' is the number of OTUs simultaneously appeared only in that number of samlpes, 
and the 'reads' is the number of reads assigned to those OTUs.

\code{sumColumns} sums the columns by the \emph{n}th substring defined in column names.
}
\examples{
# remove singletons 
ComMA::rmMinAbundance(community.matrix, minAbund=2)

t.community.matrix <- transposeDF(community.matrix)

cm.list <- spiltCM(community.matrix)

community.matrix <- getCommunityMatrix("16S", isPlot=TRUE, minAbund=1)
OTU100 <- mostAbundantRows(community.matrix, most.abund=100)

community.matrix <- getCommunityMatrix("16S", isPlot=TRUE, minAbund=1)
cm.aggre <- cmYAcrossX(community.matrix)
print(cm.aggre, row.names = FALSE)

# by subpl
community.matrix <- getCommunityMatrix("16S", isPlot=FALSE, minAbund=1)
colSums(community.matrix)
communityMatrix1 <- sumColumns(community.matrix)
colSums(communityMatrix1)

}
\keyword{community}
\keyword{matrix}

