% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepareData.R
\name{getData}
\alias{getCommunityMatrix}
\alias{getCommunityMatrixT}
\alias{getData}
\alias{getPhyloTree}
\alias{getPlot}
\alias{getSampleMetaData}
\alias{getTaxaPaths}
\alias{postfix}
\title{Get example data for \pkg{ComMA} package}
\usage{
postfix(..., isPlot = TRUE, taxa.group = "all", minAbund = 2,
  minRich = 1, sep = "-")

getPlot(full.name, sep = "-")

getCommunityMatrix(matrix.name, isPlot, minAbund = 2, verbose = TRUE)

getCommunityMatrixT(matrix.name, isPlot, taxa.group = "all", minAbund = 2,
  minRich = 1, verbose = TRUE)

getTaxaPaths(matrix.name, taxa.group = "all", rank = "kingdom",
  include = TRUE, regex = "(\\\\|[0-9]+)", verbose = TRUE)

getSampleMetaData(isPlot, verbose = TRUE)

getPhyloTree(matrix.name, taxa.group = "assigned", minAbund = 2,
  verbose = TRUE)
}
\arguments{
\item{...}{A list of names to be concatenated.}

\item{isPlot}{Boolean value to determine the matrix file sampled by subplot or plot}

\item{taxa.group}{The taxonomic group, the values can be 'all', 'assigned', or 
Group 'all' includes everything.
Group 'assigned' removes all uncertain classifications including 
'root', 'cellular organisms', 'No hits', 'Not assigned'. 
Alternatively, any high-ranking taxonomy in your taxonomy file 
can be used as a group, such as 'BACTERIA', 'Proteobacteria', etc.}

\item{minAbund}{The minimum abundance threshold to remove rows/columns 
by row/column sum of abundance. For exampe, if minAbund=2, then remove 
all singletons appeared in only one sample. If minAbund=1, 
then remove all empty rows/columns. Default to 2 (singletons).
But \code{postfix} is only used for naming, no data processed.}

\item{minRich}{The minimum richness to keep matrix. For example, 
drop the matrix (return NULL) if OTUs less than this threshold. Default to 1.}

\item{sep}{Default to dash "-".}

\item{full.name}{The full name has plot and subplot together, but separated by \code{sep}.}

\item{matrix.name}{The string to locate the matrix from its file name.}

\item{verbose}{More details. Default to TRUE.}
}
\description{
The functions are used to setup data for the project. 
The data format is described in \code{\link{ComMA}}.
}
\details{
\code{postfix} adds postfix for figure name or table label, 
and returns a name concatenated by substrings and separated by \code{sep}.

\code{getPlot} extracts plot names from full names (plot + subplot) separated by \code{sep}.

\code{getCommunityMatrix} returns a community matrix, 
where rows are OTUs or individual species and columns are sites or samples.

\code{getCommunityMatrixT} returns a transposed matrix of (maybe also a subset of) 
community matrix, given more filters, such as \code{taxa.group}, \code{minRich}.
Its columns are OTUs or individual species and rows are sites or samples. 
It is also the abundances argument in \pkg{vegetarian} \code{\link{d}}.
return \emph{NULL}, if no OTUs or OTUs less than \code{minRich} threshold.

\code{getTaxaPaths} returns a taxonomic matrix, 
where rows are OTUs or individual species (they have to be the subset of rows 
in the community matrix from \code{getCommunityMatrix}), 
and columns are taxonomic ranks, such as c("superkingdom", "kingdom", "phylum", 
"class", "order", "family", "genus", "species") inlcuding full taxonomic path.

\code{getSampleMetaData} returns a data frame containing meta data of samples

\code{getPhyloTree} returns a rooted tree of \code{\link{phylo}} object.
}
\examples{
postfix("16S", "assigned")
[1] "16S-assigned-byplot-min2"

getPlot(c("Plot1-A", "CM30c39-L"))
[1] "Plot1" "CM30c39"

# keep singletons
community.matrix <- getCommunityMatrix("16S", isPlot=TRUE, minAbund=1)

# by plot, remove singletons, BACTERIA only
t.community.matrix <- getCommunityMatrixT("16S", isPlot=TRUE, minAbund=2, taxa.group="BACTERIA")

taxaPaths <- getTaxaPaths(matrix.name="16S", taxa.group="BACTERIA|ARCHAEA")
taxaPaths <- getTaxaPaths(matrix.name="16S", taxa.group="BACTERIA|ARCHAEA", include=FALSE)
taxaPaths <- getTaxaPaths(matrix.name="18S", taxa.group="PROKARYOTA", rank="superkingdom")

env <- getSampleMetaData(isPlot=TRUE)

phylo.tree <- getPhyloTree("16S", "bacteria")

}

