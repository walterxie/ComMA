% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Graph.R
\name{ggPlot}
\alias{ggAddNumbers}
\alias{ggBarChart}
\alias{ggBoxWhiskersPlot}
\alias{ggHeatmap}
\alias{ggLine}
\alias{ggPlot}
\alias{ggScatterPlot}
\title{One-line command to get \pkg{ggplot}}
\usage{
ggLine(gg.plot, linetype = 1, xintercept, yintercept, intercept, slope,
  smooth.method)

ggAddNumbers(gg.plot, fun.y.lab = mean, fun.y.pos = median, y.adj = 0.98,
  digits = 2, dodge.width = 0.8, text.size = 3, text.colour = "black")

ggHeatmap(df, melt.id, title = "Heatmap", x.lab = "", y.lab = "",
  low = "white", high = "steelblue")

ggScatterPlot(df.melt, x.id, y.id, fill.id, point.size = 3, palette = NULL,
  rotate.x.text = FALSE, legend.col = 1, legend.nrow = 0, limits = NULL,
  title = "Bar Chart", title.size = 10, x.lab = "x.id", y.lab = "y.id",
  addLabel = FALSE, label.size = 3, hjust = -0.1, vjust = -0.2,
  alpha = 0.5)

ggBarChart(df.melt, x.id, y.id, fill.id, bar.pos = "dodge", y.scale = "nor",
  rotate.x.text = FALSE, x.interval = 0, x.lim.cart = NULL,
  y.lim.cart = NULL, palette = NULL, legend.col = 1, legend.nrow = 0,
  legend.title, title = "Bar Chart", title.size = 10, x.lab = "x.id",
  y.lab = "y.id")

ggBoxWhiskersPlot(df.melt, x.id, y.id, fill.id,
  outlier.colour = alpha("black", 0.3), y.scale = "nor", y.lower = NA,
  y.upper = NA, palette = NULL, rotate.x.text = FALSE,
  dodge.width = 0.8, title = "Box Whiskers Plot", title.size = 10,
  x.lab = "x.id", y.lab = "y.id")
}
\arguments{
\item{linetype}{\code{\link{linetype}} 0 = blank, 1 = solid, 2 = dashed, 3 = dotted, 4 = dotdash, 5 = longdash, 6 = twodash.}

\item{xintercept, yintercept, intercept, slope, smooth.method}{Refer to \pkg{ggplot2} 
\code{\link{geom_vline}}, \code{\link{geom_hline}}, \code{\link{geom_abline}}, 
\code{\link{geom_smooth}}. They cannot be used at the same time.}

\item{fun.y.lab}{A function to calculate numbers displayed in the figure.
Default to function \code{\link{mean}}. Ues \code{\link{length}} to show number of observations.}

\item{fun.y.pos}{A function to calculate the initial poistion of text on y-value. 
Default to \code{\link{median}}.}

\item{y.adj}{The propotion of the initial poistion of text on y-value. 
> 1 will raises the text, and < 1 will sinks the text. Default to 0.98.}

\item{digits}{Integer indicating the number of decimal places for \code{\link{round}}.}

\item{dodge.width}{Dodging width, when different to the width of the individual elements. 
Default to 0.8. Refer to \code{\link{position_dodge}}.}

\item{text.size}{The text size of labels. Default to 3.}

\item{text.colour}{The text colour. Default to black.}

\item{df}{A data frame to \code{\link{melt}} and then make a heat map. 
For example,
\tabular{rrrr}{
  plot \tab 16s \tab 18s \tab ITS\cr
  CM30c39 \tab 2 \tab 1 \tab 3\cr
  CM30c44 \tab 10 \tab 26 \tab 15\cr
  Plot01 \tab 6 \tab 5 \tab 6 
}}

\item{melt.id}{A column name to \code{\link{melt}} and used as a \code{\link{factor}}.}

\item{title}{Graph title}

\item{x.lab, y.lab}{The label of x-axis or y-axis, such as plot names.}

\item{low, high}{Refer to \pkg{ggplot2} \code{\link{scale_fill_gradient}}. Default to low="white", high="steelblue".}

\item{df.melt}{A data frame already \code{\link{melt}}.}

\item{x.id, y.id, }{fill.id The string of column names in the data frame 
used for \code{x, y, fill} in \code{\link{aes}} in \code{\link{ggplot}}.}

\item{palette}{The colour palette for bars. 
If NULL, then use \code{\link{ggplot}} default colours. Default to NULL.}

\item{legend.col, legend.nrow}{Customize the number of columns or rows for legend in bar chart. 
They cannot be used at the same time. Default not to use them, legend.col=1, legend.nrow=0.}

\item{limits}{A numeric vector of length two providing limits of the scale. 
Use NA to refer to the existing minimum or maximum. Refer to \code{\link{scale_y_continuous}}.
Set lower bound only to y-axis using limits = c(1000, NA). Defaul to NULL.}

\item{bar.pos}{Position adjustment for \code{\link{geom_bar}}, either as a string, 
or the result of a call to a position adjustment function. Default to "dodge". 
Assume \code{x} as discrete values for each bar. 
Use \code{fill} to generate group percentage bars.}

\item{y.scale}{The string defines the data scale used in y-axis, 
which can be "nor" standing for normal, or "per" standing for percentage, 
moreover either the name of a transformation object for \code{\link{scale_y_continuous}} 
(e.g. \code{trans="log"}), or the object itself. Built-in transformations include 
"asn", "atanh", "boxcox", "exp", "identity", "log", "log10", "log1p", "log2", "logit", 
"probability", "probit", "reciprocal", "reverse" and "sqrt". Default to "nor".}

\item{x.lim.cart, y.lim.cart}{Setting limits on the coordinate system will zoom the plot, 
and will not change the underlying data like setting limits on a scale will. 
Refer to \code{\link{coord_cartesian}}. Set lower bound only to y-axis using y.lim.cart=c(1000,NA). 
Defaul to NULL.}

\item{legend.title}{The title of legend. Set legend.title="" to remove legend.}

\item{outlier.colour}{The colour of outliers in box whiskers plot 
used for \code{outlier.colour} in \code{\link{geom_boxplot}} in \code{\link{ggplot}}. 
Default to alpha("black", 0.3).}

\item{title}{Graph title}

\item{x.lab, y.lab}{The label of x-axis or y-axis, such as plot names.}

\item{x.lab.interval}{The interval to display x values in axis. Default to 0 to do nothing.}
}
\value{
A \code{\link{ggplot}} object of heatmap.
}
\description{
Simplify \pkg{ggplot} codes into functions that can get a chart from one-line command.
}
\details{
\code{ggLine} adds a line to the given \code{\link{ggplot}} object.

\code{ggAddNumbers} adds numbers as text in a \code{\link{ggplot}} object, such as mean of box plot. 
Refer to \code{\link{stat_summary}}.

\code{ggHeatmap} creates a heat map using ggplot.

\code{ggScatterPlot} uses one-line function to plot many types of scatter chart.

One-line bar chart function to plot many types of bar chart, 
such as normal bars, log-scaled bars, percentage bars, and also grouping.

Box Whiskers Plot.
}
\examples{
p <- ggLine(p, linetype = 2, yintercept = 1)
p <- ggLine(p, smooth.method = "lm")

p <- ggAddNumbers(p, fun.y.lab=mean)
p <- ggAddNumbers(p, fun.y.lab=length, y.adj=1.02)

ranks.by.group <- data.frame(plot=c("Plot03","Plot02","Plot01"), `16s`=c(3,2,1), `18s`=c(1,2,3), ITS=c(2,1,3), check.names = F)
ranks.by.group
gg.plot <- ggHeatmap(df=ranks.by.group, melt.id="plot")
pdfGgplot(gg.plot, fig.path="plot-prior-example-heatmap.pdf") 



# log-scale y
bar.chart <- ggBarChart(df.melt, x.id="test", y.id="seconds", fill.id="version", y.scale="log")
# percentage bars without grouping in one bar each
bar.chart <- ggBarChart(df.melt, x.id="test", y.id="percentage", fill.id="model", y.scale="per")
# percentage bars one group in one bar
bar.chart <- ggBarChart(df.melt, x.id="test", y.id="percentage", fill.id="model", bar.pos="fill", y.scale="per")

# the number of OTUs (y-axis) across the number of samples (x-axis)
communityMatrix <- getCommunityMatrix("16S", isPlot=TRUE, minAbund=1)
cm.aggre <- cmYAcrossX(communityMatrix)
df.melt <- melt(cm.aggre, id="samples")
bar.chart <- ggBarChart(df.melt, x.id="samples", y.id="value", fill.id="variable", y.scale="log", 
                        y.lab="", legend.title="", x.interval=1)

box.plot <- ggBoxWhiskersPlot(df.melt, x.id="test", y.id="performance")

}
\keyword{graph}

