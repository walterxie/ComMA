% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Graph.R
\name{ggPlot}
\alias{ggAddLine}
\alias{ggAddNumbers}
\alias{ggBarChart}
\alias{ggBoxWhiskersPlot}
\alias{ggHeatmap}
\alias{ggPlot}
\alias{gtLine}
\alias{gtScatterPlot}
\title{One-line command to get \pkg{ggplot}}
\usage{
ggAddLine(gg.plot, linetype = 1, xintercept, yintercept, intercept, slope,
  smooth.method, ...)

ggAddNumbers(gg.plot, fun.y.lab = mean, fun.y.pos = median, y.adj = 0.98,
  digits = 2, dodge.width = 0.8, text.size = 3, text.colour = "black")

ggHeatmap(df.to.melt, melt.id, low = "white", high = "steelblue",
  title = "Heatmap", title.size = 10, x.lab = "", y.lab = "",
  log.scale.colour = FALSE, legend.title = "Counts", x.lim.cart = NULL,
  y.lim.cart = NULL, coord.flip = FALSE, x.text = TRUE, y.text = TRUE,
  x.text.angle = 45, no.panel.border = FALSE, verbose = TRUE)

ggBarChart(df, x.id, y.id, fill.id = NULL, bar.pos = "dodge",
  bar.stat = "identity", x.facet.id = NULL, y.facet.id = NULL,
  x.lim.cart = NULL, y.lim.cart = NULL, y.trans = "identity",
  auto.scale.y = FALSE, x.scale = "discrete", x.interval = 0,
  x.text.angle = 0, palette = NULL, coord.flip = FALSE,
  legend.title = NULL, legend.col = 1, legend.nrow = 0,
  title = "Bar Chart", title.size = 10, x.lab = "x.id", y.lab = "y.id",
  legend.position = "right", no.panel.border = FALSE, verbose = TRUE)

ggBoxWhiskersPlot(df, x.id, y.id, fill.id = NULL,
  outlier.colour = alpha("black", 0.3), dodge.width = 0.8,
  x.facet.id = NULL, y.facet.id = NULL, coord.flip = FALSE,
  y.trans = "identity", auto.scale.y = FALSE, x.lim.cart = NULL,
  y.lim.cart = NULL, palette = NULL, legend.title = NULL,
  legend.col = 1, legend.nrow = 0, title = "Box Whiskers Plot",
  title.size = 10, x.lab = "x.id", y.lab = "y.id", x.text.angle = 0,
  no.panel.border = FALSE, verbose = TRUE)

gtScatterPlot(df, x.id, y.id, colour.id = NULL, shape.id = NULL,
  shapes = NULL, point.size = 3, x.facet.id = NULL, y.facet.id = NULL,
  link.id = NULL, ellipsed.id = NULL, text.id = NULL, text.data = NULL,
  text.size = 3, text.hjust = -0.1, text.vjust = -0.2, text.alpha = 0.5,
  coord.flip = FALSE, xintercept = NULL, yintercept = NULL,
  line.type = 2, x.lim.cart = NULL, y.lim.cart = NULL, palette = NULL,
  legend.title = NULL, legend.col = 1, legend.nrow = 0,
  title = "Scatter Plot", title.size = 10, x.lab = "x.id",
  y.lab = "y.id", no.panel.border = FALSE, verbose = TRUE)

gtLine(df, x.id, y.id, group.id = NULL, colour.id = NULL, line.size = 0.5,
  line.type = 2, line.alpha = 0.75, shape.id = NULL, shapes = NULL,
  point.size = 3, point.data = NULL, x.facet.id = NULL,
  y.facet.id = NULL, coord.flip = FALSE, x.trans = "identity",
  auto.scale.x = FALSE, y.trans = "identity", auto.scale.y = FALSE,
  text.id = NULL, text.data = NULL, text.size = 3, text.hjust = -0.1,
  text.vjust = -0.2, text.alpha = 0.5, x.lim.cart = NULL,
  y.lim.cart = NULL, palette = NULL, legend.title = NULL,
  legend.col = 1, legend.nrow = 0, x.text.angle = 0, title = "",
  title.size = 10, x.lab = "x.id", y.lab = "y.id",
  no.panel.border = FALSE, verbose = TRUE)
}
\arguments{
\item{linetype}{Refer to \code{\link{linetype}}: 
0 = blank, 1 = solid, 2 = dashed, 3 = dotted, 
4 = dotdash, 5 = longdash, 6 = twodash.}

\item{xintercept, yintercept, intercept, slope, smooth.method}{Refer to \code{\link{geom_vline}}, \code{\link{geom_hline}}, 
\code{\link{geom_abline}}, \code{\link{geom_smooth}}. 
They cannot be used at the same time.}

\item{fun.y.lab}{A function to calculate numbers displayed in the figure.
Default to function \code{\link{mean}}. Ues \code{\link{length}} to show number of observations.}

\item{fun.y.pos}{A function to calculate the initial poistion of text on y-value. 
Default to \code{\link{median}}.}

\item{y.adj}{The propotion of the initial poistion of text on y-value. 
> 1 will raises the text, and < 1 will sinks the text. Default to 0.98.}

\item{digits}{Integer indicating the number of decimal places for \code{\link{round}}.}

\item{dodge.width}{Dodging width, when different to the width of the individual elements. 
Default to 0.8. Refer to \code{\link{position_dodge}}.}

\item{text.size}{The text size of labels. Default to 3.}

\item{text.colour}{The text colour. Default to black.}

\item{df.to.melt}{A data frame required to \code{\link{melt}} 
before making a \pkg{ggplot} object, such as input of \code{ggHeatmap}. 
For example,
\tabular{rrrr}{
  plot \tab 16s \tab 18s \tab ITS\cr
  CM30c39 \tab 2 \tab 1 \tab 3\cr
  CM30c44 \tab 10 \tab 26 \tab 15\cr
  Plot01 \tab 6 \tab 5 \tab 6 
}}

\item{melt.id}{A column name to \code{\link{melt}} 
and used as a \code{\link{factor}}, such as "plot" column.}

\item{low, high}{Refer to \pkg{ggplot2} \code{\link{scale_fill_gradient}}. 
Default to low="white", high="steelblue".}

\item{title}{Graph title}

\item{x.lab, y.lab}{The label of x-axis or y-axis, such as plot names.}

\item{log.scale.colour}{If TRUE, then use log scale to the colour of heat map.
Default to FALSE.}

\item{legend.title}{The title of legend. Set legend.title="" to remove legend.}

\item{x.lim.cart, y.lim.cart}{Setting limits on the coordinate system will zoom the plot, 
and will not change the underlying data like setting limits on a scale will. 
Refer to \code{\link{coord_cartesian}}. Set lower bound only to y-axis using y.lim.cart=c(1000,NA). 
Default NULL.}

\item{coord.flip}{If TRUE, then flip cartesian coordinates so that horizontal 
becomes vertical, and vertical becomes horizontal. Default to FALSE. Refer to 
\code{\link{coord_flip}}.}

\item{x.text, y.text}{If FALSE, then hide x or y axis labels. Default to TRUE.}

\item{no.panel.border}{Add panel border or not. Default to FALSE.}

\item{df}{A data frame used for plot.}

\item{x.id, y.id, fill.id, group.id}{The string of column names in \code{df},
which use for \code{x, y, fill, group} in \code{\link{aes}} in \code{\link{ggplot}}.}

\item{bar.pos}{Position adjustment for \code{\link{geom_bar}}, either as a string, 
or the result of a call to a position adjustment function. Default to "dodge". 
Use \code{fill} to generate group percentage bars.}

\item{bar.stat}{Determine what is mapped to bar height. Refer to \code{\link{geom_bar}}. 
Default to "identity", which define the heights of the bars to represent values in the data.}

\item{x.facet.id, }{y.facet.id The string of column names in \code{df},
which creates facets (a formula) in \code{\link{facet_grid}} in \code{\link{ggplot}}.}

\item{palette}{The colour palette for bar, box, scatter plot, etc. 
If length == 1, then use \code{\link{scale_colour_brewer}} 
(\url{http://www.datavis.ca/sasmac/brewerpal.html}), such as "Set1" (max 8 colours).
If 1 != length <= 3, then use \code{\link{scale_colour_gradientn}}, 
such as c("blue", "orange").
Otherwise use \code{\link{scale_fill_manual}} for a vector of customized colours.
Default NULL to use \code{\link{ggplot}} default colours.}

\item{legend.col, legend.nrow}{Customize the number of columns or rows for legend in bar chart. 
They cannot be used at the same time. Default not to use them, legend.col=1, legend.nrow=0.}

\item{outlier.colour}{The colour of outliers in box whiskers plot 
used for \code{outlier.colour} in \code{\link{geom_boxplot}} in \code{\link{ggplot}}. 
Default to alpha("black", 0.3).}

\item{colour.id, shape.id, link.id}{The column name in \code{df} to 
define how the data points are coloured, shaped, or linked according their values.}

\item{shapes}{Manually define the shapes of points. Refer to \code{\link{scale_shape_manual}}, 
and \url{http://www.cookbook-r.com/Graphs/Shapes_and_line_types/}.}

\item{point.size}{The size of points from \code{\link{point.size}}. Default to 3.}

\item{ellipsed.id}{The column name in \code{df} to define 
how to draw ellipse over data points, which is normally same as 
\code{colour.id} to show clusters.}

\item{text.id}{Label the data points according \code{text.id} column, 
such as "Row.names" column after \code{\link{merge}}.}

\item{line.size, line.alpha}{The feature of lines for \code{\link{geom_line}}.}

\item{x.trans, y.trans}{The string defines the data scale used in either x-axis or y-axis, 
which can be "identity" standing for normal, or "per" standing for percentage, 
moreover either the name of a transformation object for \code{\link{scale_x_continuous}}
or \code{\link{scale_y_continuous}} (e.g. \code{trans="log"}), or the object itself. 
Built-in transformations include "asn", "atanh", "boxcox", "exp", "identity", 
"log", "log10", "log1p", "log2", "logit", "probability", "probit", "reciprocal", 
"reverse" and "sqrt". Default to "identity".}

\item{title}{Graph title, set title="" to remove it from the plot.}

\item{x.lab, y.lab}{The label of x-axis or y-axis, such as plot names. 
Set x.lab="" to remove x-axis label from the plot.}

\item{x.lab.interval}{The interval to display x values in axis. 
Assume x values are discrete for each bar. Default to 0 to do nothing.}

\item{dodge.width}{Dodging width, when different to the width of the individual elements. 
This is useful when you want to align narrow geoms with wider geoms. 
Refer to \code{\link{position_dodge}}.}

\item{text.size, text.hjust, text.vjust, text.alpha}{The parameters to adjust text in \code{\link{geom_text}}.}

\item{xintercept, yintercept, linetype}{Add horizontal or vertical line. 
Refer to \code{\link{geom_hline}} or \code{\link{geom_vline}}.}
}
\value{
If the function returns a \code{\link{ggplot}} object, then its name starts with "gg". 
It needs to use \code{\link{pdf.ggplot}} to create pdf. 
If the function returns a \code{\link{gtable}} object, then its name starts with "gt".
It needs to use \code{\link{pdfGtplot}} to create pdf.
}
\description{
Simplify \pkg{ggplot} codes into functions that can get a chart from one-line command.
}
\details{
\code{ggAddLine} adds a line \code{\link{geom_line}} to 
a given \code{\link{ggplot}} object.

\code{ggAddNumbers} adds numbers as text in a \code{\link{ggplot}} object, such as mean of box plot. 
Refer to \code{\link{stat_summary}}.

\code{ggHeatmap} creates a heat map using ggplot.

\code{ggBarChart} is an one-line function to plot many types of bar chart, 
such as normal bars, log-scaled bars, percentage bars, and also grouping.

\code{ggBoxWhiskersPlot} creates box Whiskers plot.

\code{gtScatterPlot} uses one-line function to plot many types of scatter chart.

\code{gtLine} uses one-line function to plot a line or group of lines.
}
\examples{
p <- ggAddLine(p, linetype = 2, yintercept = 1)
p <- ggAddLine(p, smooth.method = "lm")

p <- ggAddNumbers(p, fun.y.lab=mean)
p <- ggAddNumbers(p, fun.y.lab=length, y.adj=1.02)

ranks.by.group <- data.frame(plot=c("Plot03","Plot02","Plot01"), `16s`=c(3,2,1), 
                             `18s`=c(1,2,3), ITS=c(2,1,3), check.names = F)
ranks.by.group
gg.plot <- ggHeatmap(ranks.by.group, melt.id="plot")
pdf.ggplot(gg.plot, fig.path="plot-prior-example-heatmap.pdf") 

# log-scale y
bar.chart <- ggBarChart(df, x.id="test", y.id="seconds", fill.id="version", y.trans="log")
# percentage bars without grouping in one bar each
bar.chart <- ggBarChart(df, x.id="test", y.id="percentage", fill.id="model", y.trans="per")
# percentage bars one group in one bar
bar.chart <- ggBarChart(df, x.id="test", y.id="percentage", fill.id="model", bar.pos="fill", y.trans="per")

box.plot <- ggBoxWhiskersPlot(df, x.id="test", y.id="performance")

df.clusters <- random2Clusters()
df.clusters$labels <- rownames(df.clusters)
df.clusters
g.table <- gtScatterPlot(df.clusters, x.id="x", y.id="y", colour.id="group", shape.id="group",   
                         xintercept=0, yintercept=0, title="Clusters", palette="Set1")
require(grid)
grid.draw(g.table)
# selective labeling for points x > 3 and y > 6
g.table <- gtScatterPlot(df.clusters, x.id="x", y.id="y", colour.id="group", ellipsed.id="group",
                         text.id="labels", text.data=subset(df.clusters, x > 3 & y > 6), 
                         xintercept=0, yintercept=0, title="Clusters", palette="Set1")
grid.draw(g.table)
pdf.gtable(g.table, fig.path="clusters-scatter-plot.pdf") 



}
\keyword{graph}

